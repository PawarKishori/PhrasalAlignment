Command to get parser output in general from stanford parser:
java -mx1g -cp "*" edu.stanford.nlp.parser.lexparser.LexicalizedParser -sentences newline -tokenized -tagSeparator / -tokenizerFactory edu.stanford.nlp.process.WhitespaceTokenizer -tokenizerMethod newCoreLabelTokenizerFactory edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz fox.txt 
________________________________________________________________________________________________
Line in Anusaaraka_stanford.sh: 97 :run_multiple_parse_penn.sh
if
	parser mentioned!=0 or !=""

	java  -mx900m -cp "$scriptdir/*:" edu.stanford.nlp.parser.lexparser.LexicalizedParser -sentences "newline" -outputFormat oneline -outputFormatOptions "treeDependencies" -printPCFGkBest 1000 -tokenizerOptions "americanize=false, escapeForwardSlashAsterisk=false"  $scriptdir/edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz $1

Single line tried and worked:
java -mx1g -cp "*" edu.stanford.nlp.parser.lexparser.LexicalizedParser -sentences "newline" -outputFormat oneline -outputFormatOptions "treeDependencies" -tagSeparator / -tokenizerOptions "americanize=false, escapeForwardSlashAsterisk=false"  edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz fox.txt                                        
________________________________________________________________________________________________
Line in Anusaaraka_stanford.sh:100 :run_penn-pcfg.sh:
else
	parser mentioned=0
	java  -mx900m -cp "$scriptdir/*:" edu.stanford.nlp.parser.lexparser.LexicalizedParser -sentences "newline" -outputFormat oneline -outputFormatOptions "treeDependencies" -tagSeparator / -tokenizerOptions "americanize=false, escapeForwardSlashAsterisk=false" edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz $1
________________________________________________________________________________________________
Line in Anusaaraka_stanford.sh: 103: run_stanford-parser.sh

$HOME_anu_test/Anu_src/identify-nonascii-chars.out $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn_tmp1 $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn_tmp2

./handling_abbrevations.out  < $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn_tmp2 > $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn_tmp3

python parser_correction.py $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn_tmp3 $2/tmp/$1_tmp/one_sentence_per_line.txt.morph $HOME_anu_test/Anu_data/uncountable.txt > $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn

./constituency_to_dependency.sh $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn >$2/tmp/$1_tmp/sd-relations_tmp.txt 
#./tsurgeon.sh -treeFile $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn tsurgeon-grammar > $2/tmp/$1_tmp/one_sentence_per_line.txt.std.tsurgeon
#sh run_lexicalize.sh $2/tmp/$1_tmp/one_sentence_per_line.txt.std.tsurgeon 1>$2/tmp/$1_tmp/sd-lexicalize_info_tmp.txt 2>/dev/null
./mapping-punctuations.out  < $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn > $2/tmp/$1_tmp/one_sentence_per_line.txt.std.cons
sh run_lexicalize.sh $2/tmp/$1_tmp/one_sentence_per_line.txt.std.cons 1>$2/tmp/$1_tmp/sd-lexicalize_info_tmp.txt 2>/dev/null
#sh run_lexicalize.sh $2/tmp/$1_tmp/one_sentence_per_line.txt.std.penn 1>$2/tmp/$1_tmp/sd-lexicalize_info_tmp.txt 2>/dev/null
sed -n -e "H;\${g;s/\n\n/\n;~~~~~~~~~~\n/g;p}" <$2/tmp/$1_tmp/sd-lexicalize_info_tmp.txt > $2/tmp/$1_tmp/sd-lexicalize_info.txt
python split-relations.py $2/tmp/$1_tmp/sd-relations_tmp.txt  $2/tmp/$1_tmp/sd-basic_relation.txt $2/tmp/$1_tmp/sd-propagation_relations.txt $2/tmp/$1_tmp/sd-tree_relation.txt 
./get_word_cat.out < $2/tmp/$1_tmp/one_sentence_per_line.txt.std.cons $2/tmp/$1_tmp/sd_numeric_word.txt $2/tmp/$1_tmp/sd_category.txt $2/tmp/$1_tmp/sd_word.txt

 sed -n  "H;\${g;s/\n\n------------- basic dependencies ---------------/\n;~~~~~~~~~~\n------------- basic dependencies ---------------\n/g;p}" < $2/tmp/$1_tmp/sd-relations_tmp.txt > $2/tmp/$1_tmp/sd-original-relations.txt
________________________________________________________________________________________________
constituency_to_dependency.sh, this is not working in new version(but can work)
java  -mx900m -cp "$scriptdir/*:" edu.stanford.nlp.trees.EnglishGrammaticalStructure -treeFile $1 -basic -collapsedTree -CCprocessed -keepPunct

Changes need to be done in above sceript and file:
java -mx150m -cp "$scriptdir/*:" edu.stanford.nlp.parser.lexparser.LexicalizedParser \
 -outputFormat "penn,typedDependencies" -outputFormatOptions "basicDependencies, collapsedDependencies, CCPropagatedDependencies, nonCollapsedDependencies, nonCollapsedDependenciesSeparated"  edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz $*

cmd example:
java -mx150m -cp "*" edu.stanford.nlp.parser.lexparser.LexicalizedParser -outputFormat "penn,typedDependencies" -outputFormatOptions "basicDependencies, collapsedDependencies, CCPropagatedDependencies, nonCollapsedDependencies, nonCollapsedDependenciesSeparated" edu/stanford/nlp/models/lexparser/englishPCFG.ser.gz test > test.out


__________________________________________________________________________________________________
, this is not working in new version(but can work)
java  -mx900m -cp "$scriptdir/*:" edu.stanford.nlp.trees.TreePrint -options "lexicalize" $1


